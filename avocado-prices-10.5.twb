<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0913.2134                               -->
<workbook original-version='18.1' source-build='10.5.8 (10500.18.0913.2134)' source-platform='win' version='10.5' xml:base='https://10ax.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='avocado-prices' path='/t/arkatechturebeta/workbooks' revision='1.0' site='arkatechturebeta' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='avocado-prices.csv' inline='true' name='federated.1fagxck1jg466x193opgk0c5zi7g' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='avocado-prices.csv' name='textscan.06n4q151l7lka41cw7rds0mxtd9g'>
            <connection class='textscan' directory='C:/Users/dfish/Google Drive/Darren&apos;s Tableau Champion edits/fun data' filename='avocado-prices.csv.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.06n4q151l7lka41cw7rds0mxtd9g' name='avocado-prices.csv.csv' table='[avocado-prices.csv#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='real' name='AveragePrice' ordinal='1' />
            <column datatype='real' name='Total Volume' ordinal='2' />
            <column datatype='real' name='Small Hass' ordinal='3' />
            <column datatype='real' name='Large Hass' ordinal='4' />
            <column datatype='real' name='XL Hass' ordinal='5' />
            <column datatype='real' name='Total Bags' ordinal='6' />
            <column datatype='real' name='Small Bags' ordinal='7' />
            <column datatype='real' name='Large Bags' ordinal='8' />
            <column datatype='real' name='XLarge Bags' ordinal='9' />
            <column datatype='string' name='Type' ordinal='10' />
            <column datatype='integer' name='Year' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[avocado-prices.csv.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[avocado-prices.csv.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AveragePrice</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AveragePrice]</local-name>
            <parent-name>[avocado-prices.csv.csv]</parent-name>
            <remote-alias>AveragePrice</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Volume</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Volume]</local-name>
            <parent-name>[avocado-prices.csv.csv]</parent-name>
            <remote-alias>Total Volume</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Small Hass</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Small Hass]</local-name>
            <parent-name>[avocado-prices.csv.csv]</parent-name>
            <remote-alias>Small Hass</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Large Hass</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Large Hass]</local-name>
            <parent-name>[avocado-prices.csv.csv]</parent-name>
            <remote-alias>Large Hass</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>XL Hass</remote-name>
            <remote-type>5</remote-type>
            <local-name>[XL Hass]</local-name>
            <parent-name>[avocado-prices.csv.csv]</parent-name>
            <remote-alias>XL Hass</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Bags</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Bags]</local-name>
            <parent-name>[avocado-prices.csv.csv]</parent-name>
            <remote-alias>Total Bags</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Small Bags</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Small Bags]</local-name>
            <parent-name>[avocado-prices.csv.csv]</parent-name>
            <remote-alias>Small Bags</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Large Bags</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Large Bags]</local-name>
            <parent-name>[avocado-prices.csv.csv]</parent-name>
            <remote-alias>Large Bags</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>XLarge Bags</remote-name>
            <remote-type>5</remote-type>
            <local-name>[XLarge Bags]</local-name>
            <parent-name>[avocado-prices.csv.csv]</parent-name>
            <remote-alias>XLarge Bags</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[avocado-prices.csv.csv]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[avocado-prices.csv.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[avocado-prices.csv.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Average Price' datatype='real' name='[AveragePrice]' role='measure' type='quantitative' />
      <column caption='Total volume (calc)' datatype='real' hidden='true' name='[Calculation_495114496765915136]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Large Hass]&#13;&#10;+[Large Bags]&#13;&#10;+[Small Bags]&#13;&#10;+[Small Hass]&#13;&#10;+[XL Hass]&#13;&#10;+[XLarge Bags]' />
      </column>
      <column caption='Total Hass' datatype='real' name='[Calculation_495114496798932994]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Small Hass]+[Large Hass]+[XL Hass]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Geography level' datatype='string' name='[Region (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Region]' new-bin='true'>
          <bin default-name='false' value='&quot;All US&quot;'>
            <value>&quot;TotalUS&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Metro areas&quot;'>
            <value>&quot;Albany&quot;</value>
            <value>&quot;Atlanta&quot;</value>
            <value>&quot;BaltimoreWashington&quot;</value>
            <value>&quot;Boise&quot;</value>
            <value>&quot;Boston&quot;</value>
            <value>&quot;BuffaloRochester&quot;</value>
            <value>&quot;Charlotte&quot;</value>
            <value>&quot;Chicago&quot;</value>
            <value>&quot;CincinnatiDayton&quot;</value>
            <value>&quot;Columbus&quot;</value>
            <value>&quot;DallasFtWorth&quot;</value>
            <value>&quot;Denver&quot;</value>
            <value>&quot;Detroit&quot;</value>
            <value>&quot;GrandRapids&quot;</value>
            <value>&quot;HarrisburgScranton&quot;</value>
            <value>&quot;HartfordSpringfield&quot;</value>
            <value>&quot;Houston&quot;</value>
            <value>&quot;Indianapolis&quot;</value>
            <value>&quot;Jacksonville&quot;</value>
            <value>&quot;LasVegas&quot;</value>
            <value>&quot;LosAngeles&quot;</value>
            <value>&quot;Louisville&quot;</value>
            <value>&quot;MiamiFtLauderdale&quot;</value>
            <value>&quot;Nashville&quot;</value>
            <value>&quot;NewOrleansMobile&quot;</value>
            <value>&quot;NewYork&quot;</value>
            <value>&quot;Orlando&quot;</value>
            <value>&quot;Philadelphia&quot;</value>
            <value>&quot;PhoenixTucson&quot;</value>
            <value>&quot;Pittsburgh&quot;</value>
            <value>&quot;Portland&quot;</value>
            <value>&quot;RaleighGreensboro&quot;</value>
            <value>&quot;RichmondNorfolk&quot;</value>
            <value>&quot;Roanoke&quot;</value>
            <value>&quot;Sacramento&quot;</value>
            <value>&quot;SanDiego&quot;</value>
            <value>&quot;SanFrancisco&quot;</value>
            <value>&quot;Seattle&quot;</value>
            <value>&quot;SouthCarolina&quot;</value>
            <value>&quot;Spokane&quot;</value>
            <value>&quot;StLouis&quot;</value>
            <value>&quot;Syracuse&quot;</value>
            <value>&quot;Tampa&quot;</value>
            <value>&quot;WestTexNewMexico&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Regions&quot;'>
            <value>&quot;GreatLakes&quot;</value>
            <value>&quot;Midsouth&quot;</value>
            <value>&quot;Northeast&quot;</value>
            <value>&quot;NorthernNewEngland&quot;</value>
            <value>&quot;Plains&quot;</value>
            <value>&quot;SouthCentral&quot;</value>
            <value>&quot;Southeast&quot;</value>
            <value>&quot;West&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Geography' datatype='string' name='[Region]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='Geography level, Geography'>
          <field>[Region (group)]</field>
          <field>[Region]</field>
        </drill-path>
      </drill-paths>
      <folder name='Bags' role='measures'>
        <folder-item name='[Large Bags]' type='field' />
        <folder-item name='[Small Bags]' type='field' />
        <folder-item name='[Total Bags]' type='field' />
        <folder-item name='[XLarge Bags]' type='field' />
      </folder>
      <folder name='Hass' role='measures'>
        <folder-item name='[Calculation_495114496798932994]' type='field' />
        <folder-item name='[Large Hass]' type='field' />
        <folder-item name='[Small Hass]' type='field' />
        <folder-item name='[XL Hass]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.370725' measure-ordering='alphabetic' measure-percentage='0.629275' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Region (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;All US&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Regions&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Metro areas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;California&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;BaltimoreWashington&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HarrisburgScranton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LosAngeles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SouthCarolina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PhoenixTucson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RaleighGreensboro&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MiamiFtLauderdale&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Northeast&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Midsouth&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NewOrleansMobile&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SouthCentral&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;WestTexNewMexico&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pittsburgh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NewYork&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CincinnatiDayton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Southeast&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Boston&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GrandRapids&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SanDiego&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BuffaloRochester&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NorthernNewEngland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RichmondNorfolk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SanFrancisco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DallasFtWorth&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LasVegas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GreatLakes&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Plains&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;StLouis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TotalUS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;HartfordSpringfield&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Syracuse&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='state-region-lookup' inline='true' name='federated.12qn2tv0xouy1a1fltxd41ex8vjk' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='state-region-lookup' name='textscan.0otq3ow0zvfy621125ltx0stwtpx'>
            <connection class='textscan' directory='C:/Users/dfish/Documents/GitHub/tableau-champions' filename='state-region-lookup.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[state-region-lookup.csv].[Region]' />
              <expression op='[avocado-prices.csv].[Region]' />
            </expression>
          </clause>
          <relation connection='textscan.0otq3ow0zvfy621125ltx0stwtpx' name='state-region-lookup.csv' table='[state-region-lookup#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='State' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
          <relation connection='textscan.0otq3ow0zvfy621125ltx0stwtpx' name='avocado-prices.csv' table='[avocado-prices#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='real' name='AveragePrice' ordinal='1' />
              <column datatype='real' name='Total Volume' ordinal='2' />
              <column datatype='real' name='Small Hass' ordinal='3' />
              <column datatype='real' name='Large Hass' ordinal='4' />
              <column datatype='real' name='XL Hass' ordinal='5' />
              <column datatype='real' name='Total Bags' ordinal='6' />
              <column datatype='real' name='Small Bags' ordinal='7' />
              <column datatype='real' name='Large Bags' ordinal='8' />
              <column datatype='real' name='XLarge Bags' ordinal='9' />
              <column datatype='string' name='Type' ordinal='10' />
              <column datatype='integer' name='Year' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[AveragePrice]' value='[avocado-prices.csv].[AveragePrice]' />
          <map key='[Date]' value='[avocado-prices.csv].[Date]' />
          <map key='[Large Bags]' value='[avocado-prices.csv].[Large Bags]' />
          <map key='[Large Hass]' value='[avocado-prices.csv].[Large Hass]' />
          <map key='[Region (avocado-prices.csv)]' value='[avocado-prices.csv].[Region]' />
          <map key='[Region]' value='[state-region-lookup.csv].[Region]' />
          <map key='[Small Bags]' value='[avocado-prices.csv].[Small Bags]' />
          <map key='[Small Hass]' value='[avocado-prices.csv].[Small Hass]' />
          <map key='[State]' value='[state-region-lookup.csv].[State]' />
          <map key='[Total Bags]' value='[avocado-prices.csv].[Total Bags]' />
          <map key='[Total Volume]' value='[avocado-prices.csv].[Total Volume]' />
          <map key='[Type]' value='[avocado-prices.csv].[Type]' />
          <map key='[XL Hass]' value='[avocado-prices.csv].[XL Hass]' />
          <map key='[XLarge Bags]' value='[avocado-prices.csv].[XLarge Bags]' />
          <map key='[Year]' value='[avocado-prices.csv].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[state-region-lookup.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[state-region-lookup.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[state-region-lookup.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[avocado-prices.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[avocado-prices.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AveragePrice</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AveragePrice]</local-name>
            <parent-name>[avocado-prices.csv]</parent-name>
            <remote-alias>AveragePrice</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Volume</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Volume]</local-name>
            <parent-name>[avocado-prices.csv]</parent-name>
            <remote-alias>Total Volume</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Small Hass</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Small Hass]</local-name>
            <parent-name>[avocado-prices.csv]</parent-name>
            <remote-alias>Small Hass</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Large Hass</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Large Hass]</local-name>
            <parent-name>[avocado-prices.csv]</parent-name>
            <remote-alias>Large Hass</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>XL Hass</remote-name>
            <remote-type>5</remote-type>
            <local-name>[XL Hass]</local-name>
            <parent-name>[avocado-prices.csv]</parent-name>
            <remote-alias>XL Hass</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Bags</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Bags]</local-name>
            <parent-name>[avocado-prices.csv]</parent-name>
            <remote-alias>Total Bags</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Small Bags</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Small Bags]</local-name>
            <parent-name>[avocado-prices.csv]</parent-name>
            <remote-alias>Small Bags</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Large Bags</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Large Bags]</local-name>
            <parent-name>[avocado-prices.csv]</parent-name>
            <remote-alias>Large Bags</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>XLarge Bags</remote-name>
            <remote-type>5</remote-type>
            <local-name>[XLarge Bags]</local-name>
            <parent-name>[avocado-prices.csv]</parent-name>
            <remote-alias>XLarge Bags</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[avocado-prices.csv]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[avocado-prices.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region (avocado-prices.csv)]</local-name>
            <parent-name>[avocado-prices.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Average Price' datatype='real' hidden='true' name='[AveragePrice]' role='measure' type='quantitative' />
      <column caption='Date1' datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='real' hidden='true' name='[Large Bags]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Large Hass]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregate-role-from='[State]' caption='Market' datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='real' hidden='true' name='[Small Bags]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Small Hass]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='real' hidden='true' name='[Total Bags]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Total Volume]' role='measure' type='quantitative' />
      <column caption='Type1' datatype='string' hidden='true' name='[Type]' role='dimension' type='nominal' />
      <column datatype='real' hidden='true' name='[XL Hass]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[XLarge Bags]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <drill-paths>
        <drill-path name='Market, State'>
          <field>[Region]</field>
          <field>[State]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.571819' measure-ordering='alphabetic' measure-percentage='0.428181' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='avocado-prices-by-metro-area' inline='true' name='federated.1fagxck1jg466x193opgk0c5zi7g (copy)' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='avocado-prices.csv' name='textscan.06n4q151l7lka41cw7rds0mxtd9g (copy)'>
            <connection class='textscan' directory='C:/Users/dfish/Google Drive/Darren&apos;s Tableau Champion edits/fun data' filename='avocado-prices.csv.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='string' name='Pivot Field Names' />
            <column datatype='real' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[Large Bags]' />
            <value name='[Large Hass]' />
            <value name='[Small Bags]' />
            <value name='[Small Hass]' />
            <value name='[XL Hass]' />
            <value name='[XL Bags]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[avocado-prices.csv.csv].[Large Bags]' />
              <field name='[avocado-prices.csv.csv].[Large Hass]' />
              <field name='[avocado-prices.csv.csv].[Small Bags]' />
              <field name='[avocado-prices.csv.csv].[Small Hass]' />
              <field name='[avocado-prices.csv.csv].[XL Hass]' />
              <field name='[avocado-prices.csv.csv].[XLarge Bags]' />
            </group>
          </groups>
          <relation connection='textscan.06n4q151l7lka41cw7rds0mxtd9g (copy)' name='avocado-prices.csv.csv' table='[avocado-prices.csv#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='real' name='AveragePrice' ordinal='1' />
              <column datatype='real' name='Total Volume' ordinal='2' />
              <column datatype='real' name='Small Hass' ordinal='3' />
              <column datatype='real' name='Large Hass' ordinal='4' />
              <column datatype='real' name='XL Hass' ordinal='5' />
              <column datatype='real' name='Total Bags' ordinal='6' />
              <column datatype='real' name='Small Bags' ordinal='7' />
              <column datatype='real' name='Large Bags' ordinal='8' />
              <column datatype='real' name='XLarge Bags' ordinal='9' />
              <column datatype='string' name='Type' ordinal='10' />
              <column datatype='integer' name='Year' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[avocado-prices.csv.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[avocado-prices.csv.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AveragePrice</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AveragePrice]</local-name>
            <parent-name>[avocado-prices.csv.csv]</parent-name>
            <remote-alias>AveragePrice</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Volume</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Volume]</local-name>
            <parent-name>[avocado-prices.csv.csv]</parent-name>
            <remote-alias>Total Volume</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Bags</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Bags]</local-name>
            <parent-name>[avocado-prices.csv.csv]</parent-name>
            <remote-alias>Total Bags</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[avocado-prices.csv.csv]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[avocado-prices.csv.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[avocado-prices.csv.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Names</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pivot Field Names]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Names</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pivot Field Values]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Values</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Avg' caption='Average Price' datatype='real' name='[AveragePrice]' role='measure' type='quantitative' />
      <column caption='Approx. avocados sold' datatype='integer' name='[Calculation_1469862365833113600]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FLOOR([Pivot Field Values]/[AveragePrice])' />
      </column>
      <column caption='Geography level' datatype='string' name='[Geography level (copy)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Region]' new-bin='true'>
          <bin default-name='false' value='&quot;All US&quot;'>
            <value>&quot;TotalUS&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Markets&quot;'>
            <value>&quot;California&quot;</value>
            <value>&quot;GreatLakes&quot;</value>
            <value>&quot;Midsouth&quot;</value>
            <value>&quot;Northeast&quot;</value>
            <value>&quot;NorthernNewEngland&quot;</value>
            <value>&quot;Plains&quot;</value>
            <value>&quot;SouthCentral&quot;</value>
            <value>&quot;Southeast&quot;</value>
            <value>&quot;West&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Metro areas&quot;'>
            <value>&quot;Albany&quot;</value>
            <value>&quot;Atlanta&quot;</value>
            <value>&quot;BaltimoreWashington&quot;</value>
            <value>&quot;Boise&quot;</value>
            <value>&quot;Boston&quot;</value>
            <value>&quot;BuffaloRochester&quot;</value>
            <value>&quot;Charlotte&quot;</value>
            <value>&quot;Chicago&quot;</value>
            <value>&quot;CincinnatiDayton&quot;</value>
            <value>&quot;Columbus&quot;</value>
            <value>&quot;DallasFtWorth&quot;</value>
            <value>&quot;Denver&quot;</value>
            <value>&quot;Detroit&quot;</value>
            <value>&quot;GrandRapids&quot;</value>
            <value>&quot;HarrisburgScranton&quot;</value>
            <value>&quot;HartfordSpringfield&quot;</value>
            <value>&quot;Houston&quot;</value>
            <value>&quot;Indianapolis&quot;</value>
            <value>&quot;Jacksonville&quot;</value>
            <value>&quot;LasVegas&quot;</value>
            <value>&quot;LosAngeles&quot;</value>
            <value>&quot;Louisville&quot;</value>
            <value>&quot;MiamiFtLauderdale&quot;</value>
            <value>&quot;Nashville&quot;</value>
            <value>&quot;NewOrleansMobile&quot;</value>
            <value>&quot;NewYork&quot;</value>
            <value>&quot;Orlando&quot;</value>
            <value>&quot;Philadelphia&quot;</value>
            <value>&quot;PhoenixTucson&quot;</value>
            <value>&quot;Pittsburgh&quot;</value>
            <value>&quot;Portland&quot;</value>
            <value>&quot;RaleighGreensboro&quot;</value>
            <value>&quot;RichmondNorfolk&quot;</value>
            <value>&quot;Roanoke&quot;</value>
            <value>&quot;Sacramento&quot;</value>
            <value>&quot;SanDiego&quot;</value>
            <value>&quot;SanFrancisco&quot;</value>
            <value>&quot;Seattle&quot;</value>
            <value>&quot;SouthCarolina&quot;</value>
            <value>&quot;Spokane&quot;</value>
            <value>&quot;StLouis&quot;</value>
            <value>&quot;Syracuse&quot;</value>
            <value>&quot;Tampa&quot;</value>
            <value>&quot;WestTexNewMexico&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Size' datatype='string' name='[Pivot Field Names - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1fagxck1jg466x193opgk0c5zi7g (copy)].[Pivot Field Names]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Pivot Field Names], &quot; &quot;, 1 ) )' />
      </column>
      <column caption='Hass/Bags' datatype='string' name='[Pivot Field Names - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1fagxck1jg466x193opgk0c5zi7g (copy)].[Pivot Field Names]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Pivot Field Names], &quot; &quot;, 2 ) )' />
      </column>
      <column caption='Pivot dimensions' datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
      <column caption='Avocado revenue' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
      <column caption='Metro' datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='real' hidden='true' name='[Total Bags]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Total Volume]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Pivot Field Names - Split 1]' derivation='None' name='[none:Pivot Field Names - Split 1:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='Geography level, Geography'>
          <field>[Geography level (copy)]</field>
          <field>[Region]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/dfish/Google Drive/Darren&apos;s Tableau Champion edits/fun data/avocado-prices-by-market.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/15/2019 03:58:01 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='avocado-prices-by-market' increment-value='%null%' refresh-type='create' rows-inserted='109494' timestamp-start='2019-03-15 15:58:01.928' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>0</ordinal>
              <family>avocado-prices.csv.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>169</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AveragePrice</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AveragePrice]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AveragePrice</remote-alias>
              <ordinal>1</ordinal>
              <family>avocado-prices.csv.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>183</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Type</remote-alias>
              <ordinal>2</ordinal>
              <family>avocado-prices.csv.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>3</ordinal>
              <family>avocado-prices.csv.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>4</ordinal>
              <family>avocado-prices.csv.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>54</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pivot Field Names</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Pivot Field Names]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Pivot Field Names</remote-alias>
              <ordinal>5</ordinal>
              <family>Pivot</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pivot Field Values</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Pivot Field Values]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Pivot Field Values</remote-alias>
              <ordinal>6</ordinal>
              <family>Pivot</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1540</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.571819' measure-ordering='alphabetic' measure-percentage='0.428181' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;BaltimoreWashington&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HarrisburgScranton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LosAngeles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SouthCarolina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PhoenixTucson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RaleighGreensboro&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MiamiFtLauderdale&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Northeast&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Midsouth&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NewOrleansMobile&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SouthCentral&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;WestTexNewMexico&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pittsburgh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NewYork&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CincinnatiDayton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Southeast&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Boston&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GrandRapids&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SanDiego&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BuffaloRochester&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NorthernNewEngland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RichmondNorfolk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SanFrancisco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DallasFtWorth&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LasVegas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GreatLakes&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Plains&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;StLouis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TotalUS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;HartfordSpringfield&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Syracuse&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Pivot Field Names - Split 1:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Large&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;XL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Small&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Date' />
        <field-sort-custom-order field='AveragePrice' />
        <field-sort-custom-order field='Type' />
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Pivot Field Names' />
        <field-sort-custom-order field='Pivot Field Names - Split 1' />
        <field-sort-custom-order field='Pivot Field Names - Split 2' />
        <field-sort-custom-order field='Pivot Field Values' />
        <field-sort-custom-order field='Calculation_1469862365833113600' />
        <field-sort-custom-order field='Region (group)' />
        <field-sort-custom-order field='Geography level (copy)' />
        <field-sort-custom-order field='Total Volume' />
        <field-sort-custom-order field='Total Bags' />
      </field-sort-info>
      <filter class='categorical' column='[Geography level (copy)]' filter-group='2'>
        <groupfilter function='member' level='[Geography level (copy)]' member='&quot;Metro areas&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </datasource>
    <datasource caption='avocado-prices-by-market' inline='true' name='federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='avocado-prices.csv' name='textscan.06n4q151l7lka41cw7rds0mxtd9g (copy 2)'>
            <connection class='textscan' directory='C:/Users/dfish/Google Drive/Darren&apos;s Tableau Champion edits/fun data' filename='avocado-prices.csv.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='string' name='Pivot Field Names' />
            <column datatype='real' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[Large Bags]' />
            <value name='[Large Hass]' />
            <value name='[Small Bags]' />
            <value name='[Small Hass]' />
            <value name='[XL Hass]' />
            <value name='[XL Bags]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[avocado-prices.csv.csv].[Large Bags]' />
              <field name='[avocado-prices.csv.csv].[Large Hass]' />
              <field name='[avocado-prices.csv.csv].[Small Bags]' />
              <field name='[avocado-prices.csv.csv].[Small Hass]' />
              <field name='[avocado-prices.csv.csv].[XL Hass]' />
              <field name='[avocado-prices.csv.csv].[XLarge Bags]' />
            </group>
          </groups>
          <relation connection='textscan.06n4q151l7lka41cw7rds0mxtd9g (copy 2)' name='avocado-prices.csv.csv' table='[avocado-prices.csv#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='real' name='AveragePrice' ordinal='1' />
              <column datatype='real' name='Total Volume' ordinal='2' />
              <column datatype='real' name='Small Hass' ordinal='3' />
              <column datatype='real' name='Large Hass' ordinal='4' />
              <column datatype='real' name='XL Hass' ordinal='5' />
              <column datatype='real' name='Total Bags' ordinal='6' />
              <column datatype='real' name='Small Bags' ordinal='7' />
              <column datatype='real' name='Large Bags' ordinal='8' />
              <column datatype='real' name='XLarge Bags' ordinal='9' />
              <column datatype='string' name='Type' ordinal='10' />
              <column datatype='integer' name='Year' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
            </columns>
          </relation>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[avocado-prices.csv.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[avocado-prices.csv.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AveragePrice</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AveragePrice]</local-name>
            <parent-name>[avocado-prices.csv.csv]</parent-name>
            <remote-alias>AveragePrice</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Volume</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Volume]</local-name>
            <parent-name>[avocado-prices.csv.csv]</parent-name>
            <remote-alias>Total Volume</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Bags</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Bags]</local-name>
            <parent-name>[avocado-prices.csv.csv]</parent-name>
            <remote-alias>Total Bags</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[avocado-prices.csv.csv]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[avocado-prices.csv.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[avocado-prices.csv.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Names</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pivot Field Names]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Names</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pivot Field Values]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Values</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Avg' caption='Average Price' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[AveragePrice]' role='measure' type='quantitative' />
      <column caption='Approx. avocado revenue' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_1469862365833113600]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Pivot Field Values]*[AveragePrice]' />
      </column>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column caption='Geography level' datatype='string' name='[Geography level (copy)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Region]' new-bin='true'>
          <bin default-name='false' value='&quot;All US&quot;'>
            <value>&quot;TotalUS&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Markets&quot;'>
            <value>&quot;California&quot;</value>
            <value>&quot;GreatLakes&quot;</value>
            <value>&quot;Midsouth&quot;</value>
            <value>&quot;Northeast&quot;</value>
            <value>&quot;Plains&quot;</value>
            <value>&quot;SouthCentral&quot;</value>
            <value>&quot;Southeast&quot;</value>
            <value>&quot;West&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Metro areas&quot;'>
            <value>&quot;Albany&quot;</value>
            <value>&quot;Atlanta&quot;</value>
            <value>&quot;BaltimoreWashington&quot;</value>
            <value>&quot;Boise&quot;</value>
            <value>&quot;Boston&quot;</value>
            <value>&quot;BuffaloRochester&quot;</value>
            <value>&quot;Charlotte&quot;</value>
            <value>&quot;Chicago&quot;</value>
            <value>&quot;CincinnatiDayton&quot;</value>
            <value>&quot;Columbus&quot;</value>
            <value>&quot;DallasFtWorth&quot;</value>
            <value>&quot;Denver&quot;</value>
            <value>&quot;Detroit&quot;</value>
            <value>&quot;GrandRapids&quot;</value>
            <value>&quot;HarrisburgScranton&quot;</value>
            <value>&quot;HartfordSpringfield&quot;</value>
            <value>&quot;Houston&quot;</value>
            <value>&quot;Indianapolis&quot;</value>
            <value>&quot;Jacksonville&quot;</value>
            <value>&quot;LasVegas&quot;</value>
            <value>&quot;LosAngeles&quot;</value>
            <value>&quot;Louisville&quot;</value>
            <value>&quot;MiamiFtLauderdale&quot;</value>
            <value>&quot;Nashville&quot;</value>
            <value>&quot;NewOrleansMobile&quot;</value>
            <value>&quot;NewYork&quot;</value>
            <value>&quot;Orlando&quot;</value>
            <value>&quot;Philadelphia&quot;</value>
            <value>&quot;PhoenixTucson&quot;</value>
            <value>&quot;Pittsburgh&quot;</value>
            <value>&quot;Portland&quot;</value>
            <value>&quot;RaleighGreensboro&quot;</value>
            <value>&quot;RichmondNorfolk&quot;</value>
            <value>&quot;Roanoke&quot;</value>
            <value>&quot;Sacramento&quot;</value>
            <value>&quot;SanDiego&quot;</value>
            <value>&quot;SanFrancisco&quot;</value>
            <value>&quot;Seattle&quot;</value>
            <value>&quot;SouthCarolina&quot;</value>
            <value>&quot;Spokane&quot;</value>
            <value>&quot;StLouis&quot;</value>
            <value>&quot;Syracuse&quot;</value>
            <value>&quot;Tampa&quot;</value>
            <value>&quot;WestTexNewMexico&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Size' datatype='string' name='[Pivot Field Names - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1fagxck1jg466x193opgk0c5zi7g (copy)].[Pivot Field Names]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Pivot Field Names], &quot; &quot;, 1 ) )' />
      </column>
      <column caption='Hass/Bags' datatype='string' name='[Pivot Field Names - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1fagxck1jg466x193opgk0c5zi7g (copy)].[Pivot Field Names]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Pivot Field Names], &quot; &quot;, 2 ) )' />
      </column>
      <column caption='Pivot dimensions' datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
      <column caption='Avocados sold' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
      <column caption='Market' datatype='string' name='[Region]' role='dimension' semantic-role='' type='nominal' />
      <column datatype='real' hidden='true' name='[Total Bags]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Total Volume]' role='measure' type='quantitative' />
      <column datatype='string' name='[Type]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <group caption='Action (Date,Hass/Bags,Market,Type)' hidden='true' name='[Action (Date,Hass/Bags,Market,Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Date]' />
          <groupfilter function='level-members' level='[Pivot Field Names - Split 2]' />
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='level-members' level='[Type]' />
        </groupfilter>
      </group>
      <group caption='Action (Hass/Bags)' hidden='true' name='[Action (Hass/Bags)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Pivot Field Names - Split 2]' />
        </groupfilter>
      </group>
      <group caption='Action (Hass/Bags,Market,Type)' hidden='true' name='[Action (Hass/Bags,Market,Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Pivot Field Names - Split 2]' />
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='level-members' level='[Type]' />
        </groupfilter>
      </group>
      <group caption='Action (Hass/Bags,Type)' hidden='true' name='[Action (Hass/Bags,Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Pivot Field Names - Split 2]' />
          <groupfilter function='level-members' level='[Type]' />
        </groupfilter>
      </group>
      <group caption='Action (Market)' hidden='true' name='[Action (Market)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (Market,Type)' hidden='true' name='[Action (Market,Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='level-members' level='[Type]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Geography level, Geography'>
          <field>[Geography level (copy)]</field>
          <field>[Region]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/dfish/Google Drive/Darren&apos;s Tableau Champion edits/fun data/avocado-prices-by-market copy 1.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/15/2019 05:34:13 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='16224' timestamp-start='2019-03-15 17:34:13.799' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>0</ordinal>
              <family>avocado-prices.csv.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>169</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AveragePrice</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AveragePrice]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AveragePrice</remote-alias>
              <ordinal>1</ordinal>
              <family>avocado-prices.csv.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>149</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Type</remote-alias>
              <ordinal>2</ordinal>
              <family>avocado-prices.csv.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>3</ordinal>
              <family>avocado-prices.csv.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>4</ordinal>
              <family>avocado-prices.csv.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pivot Field Names</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Pivot Field Names]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Pivot Field Names</remote-alias>
              <ordinal>5</ordinal>
              <family>Pivot</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pivot Field Values</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Pivot Field Values]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Pivot Field Values</remote-alias>
              <ordinal>6</ordinal>
              <family>Pivot</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3676</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='categorical' column='[Geography level (copy)]'>
          <groupfilter function='member' level='[Geography level (copy)]' member='&quot;Markets&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.571819' measure-ordering='alphabetic' measure-percentage='0.428181' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;BaltimoreWashington&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HarrisburgScranton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LosAngeles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SouthCarolina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PhoenixTucson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Plains&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RaleighGreensboro&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Northeast&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MiamiFtLauderdale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NewOrleansMobile&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;WestTexNewMexico&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pittsburgh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NewYork&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Southeast&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CincinnatiDayton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Boston&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GrandRapids&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SanDiego&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BuffaloRochester&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Midsouth&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NorthernNewEngland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;SouthCentral&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RichmondNorfolk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SanFrancisco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DallasFtWorth&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GreatLakes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LasVegas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;StLouis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TotalUS&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;HartfordSpringfield&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Syracuse&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Date' />
        <field-sort-custom-order field='AveragePrice' />
        <field-sort-custom-order field='Type' />
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Calculation_791789146978066432' />
        <field-sort-custom-order field='Pivot Field Names' />
        <field-sort-custom-order field='Pivot Field Names - Split 1' />
        <field-sort-custom-order field='Pivot Field Names - Split 2' />
        <field-sort-custom-order field='Pivot Field Values' />
        <field-sort-custom-order field='Calculation_1469862365833113600' />
        <field-sort-custom-order field='Region (group)' />
        <field-sort-custom-order field='Geography level (copy)' />
        <field-sort-custom-order field='Total Volume' />
        <field-sort-custom-order field='Total Bags' />
      </field-sort-info>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='federated.12qn2tv0xouy1a1fltxd41ex8vjk'>
      <column caption='Date1' datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column aggregate-role-from='[State]' caption='Market' datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)'>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column caption='Market' datatype='string' name='[Region]' role='dimension' semantic-role='' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-relationship source='federated.12qn2tv0xouy1a1fltxd41ex8vjk' target='federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)'>
      <column-mapping>
        <map key='[federated.12qn2tv0xouy1a1fltxd41ex8vjk].[none:Date:ok]' value='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[none:Date:ok]' />
        <map key='[federated.12qn2tv0xouy1a1fltxd41ex8vjk].[none:Region:nk]' value='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[none:Region:nk]' />
        <map key='[federated.12qn2tv0xouy1a1fltxd41ex8vjk].[none:Year:ok]' value='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[none:Year:ok]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight2' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Interactions dashboard' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='MONTH(Date),Market' />
        <param name='target' value='Interactions dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Metro area'>
      <table>
        <view>
          <datasources>
            <datasource caption='avocado-prices-by-metro-area' name='federated.1fagxck1jg466x193opgk0c5zi7g (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1fagxck1jg466x193opgk0c5zi7g (copy)'>
            <column aggregation='Avg' caption='Average Price' datatype='real' name='[AveragePrice]' role='measure' type='quantitative' />
            <column caption='Approx. avocados sold' datatype='integer' name='[Calculation_1469862365833113600]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOOR([Pivot Field Values]/[AveragePrice])' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Avocado revenue' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column caption='Metro' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1469862365833113600]' derivation='Sum' name='[pcdf:win:sum:Calculation_1469862365833113600:qk:2]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-11' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1fagxck1jg466x193opgk0c5zi7g (copy)].[none:Date:qk]' included-values='in-range'>
            <min>#2015-03-25#</min>
            <max>#2018-03-25#</max>
          </filter>
          <slices>
            <column>[federated.1fagxck1jg466x193opgk0c5zi7g (copy)].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fagxck1jg466x193opgk0c5zi7g (copy)].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1fagxck1jg466x193opgk0c5zi7g (copy)].[pcdf:win:sum:Calculation_1469862365833113600:qk:2]</rows>
        <cols>[federated.1fagxck1jg466x193opgk0c5zi7g (copy)].[none:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Monthly average avocado price'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;&#10;</run>
            <run fontsize='9'>12-month moving average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avocado-prices-by-market' name='federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)'>
            <column aggregation='Avg' caption='Average Price' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[AveragePrice]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Hass/Bags' datatype='string' name='[Pivot Field Names - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1fagxck1jg466x193opgk0c5zi7g (copy)].[Pivot Field Names]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Pivot Field Names], &quot; &quot;, 2 ) )' />
            </column>
            <column caption='Pivot dimensions' datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
            <column caption='Market' datatype='string' name='[Region]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Pivot Field Names - Split 2]' derivation='Attribute' name='[attr:Pivot Field Names - Split 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='Attribute' name='[attr:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AveragePrice]' derivation='Avg' name='[win:avg:AveragePrice:qk:2]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-11' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[tmn:Date:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[tmn:Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[tmn:Date:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[win:avg:AveragePrice:qk:2]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[win:avg:AveragePrice:qk:2]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[win:avg:AveragePrice:qk:2]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[none:Region:nk]' />
              <tooltip column='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[attr:Pivot Field Names - Split 2:nk]' />
              <tooltip column='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[attr:Type:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[win:avg:AveragePrice:qk:2]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[win:avg:AveragePrice:qk:2]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.31784531474113464' />
                <format attr='mark-markers-mode' value='auto' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[win:avg:AveragePrice:qk:2]</rows>
        <cols>[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[tmn:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Share of avocados sold'>
      <table>
        <view>
          <datasources>
            <datasource caption='avocado-prices-by-market' name='federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Hass/Bags' datatype='string' name='[Pivot Field Names - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1fagxck1jg466x193opgk0c5zi7g (copy)].[Pivot Field Names]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Pivot Field Names], &quot; &quot;, 2 ) )' />
            </column>
            <column caption='Pivot dimensions' datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
            <column caption='Avocados sold' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column caption='Market' datatype='string' name='[Region]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Pivot Field Names - Split 2]' derivation='None' name='[none:Pivot Field Names - Split 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Sum' name='[pcto:sum:Pivot Field Values:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' type='PctTotal' />
            </column-instance>
            <column-instance column='[Pivot Field Values]' derivation='Sum' name='[sum:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[tmn:Date:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[tmn:Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[tmn:Date:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[pcto:sum:Pivot Field Values:qk:4]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[pcto:sum:Pivot Field Values:qk:4]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[pcto:sum:Pivot Field Values:qk:4]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[pcto:sum:Pivot Field Values:qk:4]' value='p0.00%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[none:Type:nk]' value='32' />
            <format attr='height' field='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[none:Pivot Field Names - Split 2:nk]' value='28' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[none:Type:nk]' value='-90' />
            <format attr='font-size' field='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[none:Type:nk]' value='16' />
            <format attr='font-weight' field='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[none:Type:nk]' value='bold' />
            <format attr='color' field='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[none:Type:nk]' value='#000000' />
            <format attr='font-size' field='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[none:Pivot Field Names - Split 2:nk]' value='14' />
            <format attr='color' field='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[none:Pivot Field Names - Split 2:nk]' value='#000000' />
            <format attr='font-weight' field='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[none:Pivot Field Names - Split 2:nk]' value='bold' />
            <format attr='text-format' field='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[pcto:sum:Pivot Field Values:qk:4]' value='p0.00%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='1' />
            <format attr='text-format' id='refline0' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[none:Region:nk]' />
              <tooltip column='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[sum:Pivot Field Values:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[pcto:sum:Pivot Field Values:qk:4]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[pcto:sum:Pivot Field Values:qk:4]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.69165748357772827' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[none:Type:nk] * [federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[pcto:sum:Pivot Field Values:qk:4])</rows>
        <cols>([federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[none:Pivot Field Names - Split 2:nk] * [federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[tmn:Date:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='los angeles trends'>
      <table>
        <view>
          <datasources>
            <datasource caption='avocado-prices-by-metro-area' name='federated.1fagxck1jg466x193opgk0c5zi7g (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1fagxck1jg466x193opgk0c5zi7g (copy)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Size' datatype='string' name='[Pivot Field Names - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1fagxck1jg466x193opgk0c5zi7g (copy)].[Pivot Field Names]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Pivot Field Names], &quot; &quot;, 1 ) )' />
            </column>
            <column caption='Hass/Bags' datatype='string' name='[Pivot Field Names - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1fagxck1jg466x193opgk0c5zi7g (copy)].[Pivot Field Names]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Pivot Field Names], &quot; &quot;, 2 ) )' />
            </column>
            <column caption='Pivot dimensions' datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
            <column caption='Avocado revenue' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column caption='Metro' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pivot Field Names - Split 1]' derivation='None' name='[none:Pivot Field Names - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Names - Split 2]' derivation='None' name='[none:Pivot Field Names - Split 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Sum' name='[sum:Pivot Field Values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fagxck1jg466x193opgk0c5zi7g (copy)].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;LosAngeles&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1fagxck1jg466x193opgk0c5zi7g (copy)].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fagxck1jg466x193opgk0c5zi7g (copy)].[none:Pivot Field Names - Split 1:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1fagxck1jg466x193opgk0c5zi7g (copy)].[none:Pivot Field Names - Split 2:nk] * [federated.1fagxck1jg466x193opgk0c5zi7g (copy)].[sum:Pivot Field Values:qk])</rows>
        <cols>[federated.1fagxck1jg466x193opgk0c5zi7g (copy)].[none:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='map legend'>
      <table>
        <view>
          <datasources>
            <datasource caption='state-region-lookup' name='federated.12qn2tv0xouy1a1fltxd41ex8vjk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12qn2tv0xouy1a1fltxd41ex8vjk'>
            <column aggregate-role-from='[State]' caption='Market' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.12qn2tv0xouy1a1fltxd41ex8vjk].[Longitude (generated)]' field-type='quantitative' max='-7362109.2421504064' min='-14081030.284232011' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.12qn2tv0xouy1a1fltxd41ex8vjk].[Latitude (generated)]' field-type='quantitative' max='6825593.959940359' min='2563798.8061550818' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.12qn2tv0xouy1a1fltxd41ex8vjk].[none:Region:nk]' />
              <lod column='[federated.12qn2tv0xouy1a1fltxd41ex8vjk].[none:Region:nk]' />
              <geometry column='[federated.12qn2tv0xouy1a1fltxd41ex8vjk].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12qn2tv0xouy1a1fltxd41ex8vjk].[Latitude (generated)]</rows>
        <cols>[federated.12qn2tv0xouy1a1fltxd41ex8vjk].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='stacked area'>
      <table>
        <view>
          <datasources>
            <datasource caption='avocado-prices.csv' name='federated.1fagxck1jg466x193opgk0c5zi7g' />
          </datasources>
          <datasource-dependencies datasource='federated.1fagxck1jg466x193opgk0c5zi7g'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Geography level' datatype='string' name='[Region (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Region]' new-bin='true'>
                <bin default-name='false' value='&quot;All US&quot;'>
                  <value>&quot;TotalUS&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Metro areas&quot;'>
                  <value>&quot;Albany&quot;</value>
                  <value>&quot;Atlanta&quot;</value>
                  <value>&quot;BaltimoreWashington&quot;</value>
                  <value>&quot;Boise&quot;</value>
                  <value>&quot;Boston&quot;</value>
                  <value>&quot;BuffaloRochester&quot;</value>
                  <value>&quot;Charlotte&quot;</value>
                  <value>&quot;Chicago&quot;</value>
                  <value>&quot;CincinnatiDayton&quot;</value>
                  <value>&quot;Columbus&quot;</value>
                  <value>&quot;DallasFtWorth&quot;</value>
                  <value>&quot;Denver&quot;</value>
                  <value>&quot;Detroit&quot;</value>
                  <value>&quot;GrandRapids&quot;</value>
                  <value>&quot;HarrisburgScranton&quot;</value>
                  <value>&quot;HartfordSpringfield&quot;</value>
                  <value>&quot;Houston&quot;</value>
                  <value>&quot;Indianapolis&quot;</value>
                  <value>&quot;Jacksonville&quot;</value>
                  <value>&quot;LasVegas&quot;</value>
                  <value>&quot;LosAngeles&quot;</value>
                  <value>&quot;Louisville&quot;</value>
                  <value>&quot;MiamiFtLauderdale&quot;</value>
                  <value>&quot;Nashville&quot;</value>
                  <value>&quot;NewOrleansMobile&quot;</value>
                  <value>&quot;NewYork&quot;</value>
                  <value>&quot;Orlando&quot;</value>
                  <value>&quot;Philadelphia&quot;</value>
                  <value>&quot;PhoenixTucson&quot;</value>
                  <value>&quot;Pittsburgh&quot;</value>
                  <value>&quot;Portland&quot;</value>
                  <value>&quot;RaleighGreensboro&quot;</value>
                  <value>&quot;RichmondNorfolk&quot;</value>
                  <value>&quot;Roanoke&quot;</value>
                  <value>&quot;Sacramento&quot;</value>
                  <value>&quot;SanDiego&quot;</value>
                  <value>&quot;SanFrancisco&quot;</value>
                  <value>&quot;Seattle&quot;</value>
                  <value>&quot;SouthCarolina&quot;</value>
                  <value>&quot;Spokane&quot;</value>
                  <value>&quot;StLouis&quot;</value>
                  <value>&quot;Syracuse&quot;</value>
                  <value>&quot;Tampa&quot;</value>
                  <value>&quot;WestTexNewMexico&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Regions&quot;'>
                  <value>&quot;GreatLakes&quot;</value>
                  <value>&quot;Midsouth&quot;</value>
                  <value>&quot;Northeast&quot;</value>
                  <value>&quot;NorthernNewEngland&quot;</value>
                  <value>&quot;Plains&quot;</value>
                  <value>&quot;SouthCentral&quot;</value>
                  <value>&quot;Southeast&quot;</value>
                  <value>&quot;West&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Geography' datatype='string' name='[Region]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Total Volume]' role='measure' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Volume]' derivation='Sum' name='[pcto:sum:Total Volume:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Total Volume]' derivation='Sum' name='[sum:Total Volume:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fagxck1jg466x193opgk0c5zi7g].[Region (group)]'>
            <groupfilter function='member' level='[Region (group)]' member='&quot;Metro areas&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1fagxck1jg466x193opgk0c5zi7g].[none:Region:nk]' direction='DESC' using='[federated.1fagxck1jg466x193opgk0c5zi7g].[sum:Total Volume:qk]' />
          <slices>
            <column>[federated.1fagxck1jg466x193opgk0c5zi7g].[Region (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1fagxck1jg466x193opgk0c5zi7g].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1fagxck1jg466x193opgk0c5zi7g].[pcto:sum:Total Volume:qk:2]</rows>
        <cols>[federated.1fagxck1jg466x193opgk0c5zi7g].[tmn:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='years'>
      <table>
        <view>
          <datasources>
            <datasource caption='avocado-prices.csv' name='federated.1fagxck1jg466x193opgk0c5zi7g' />
          </datasources>
          <datasource-dependencies datasource='federated.1fagxck1jg466x193opgk0c5zi7g'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols>[federated.1fagxck1jg466x193opgk0c5zi7g].[yr:Date:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Interactions dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='8' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='3' type='layout-basic' w='98400' x='800' y='1000'>
                <zone h='58625' id='6' name='Share of avocados sold' w='98400' x='800' y='40375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='39375' id='1' name='map legend' show-title='false' w='43500' x='55700' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='39375' id='9' name='Monthly average avocado price' w='54900' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='stacked area'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1fagxck1jg466x193opgk0c5zi7g].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fagxck1jg466x193opgk0c5zi7g].[none:Region:nk]</field>
            <field>[federated.1fagxck1jg466x193opgk0c5zi7g].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fagxck1jg466x193opgk0c5zi7g].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='los angeles trends'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1fagxck1jg466x193opgk0c5zi7g (copy)].[none:Pivot Field Names - Split 1:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fagxck1jg466x193opgk0c5zi7g (copy)].[none:Pivot Field Names - Split 1:nk]</field>
            <field>[federated.1fagxck1jg466x193opgk0c5zi7g (copy)].[none:Pivot Field Names - Split 2:nk]</field>
            <field>[federated.1fagxck1jg466x193opgk0c5zi7g (copy)].[none:Region:nk]</field>
            <field>[federated.1fagxck1jg466x193opgk0c5zi7g (copy)].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Metro area'>
      <cards>
        <edge name='left'>
          <strip size='243'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1fagxck1jg466x193opgk0c5zi7g (copy)].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fagxck1jg466x193opgk0c5zi7g (copy)].[Geography level (copy)]</field>
            <field>[federated.1fagxck1jg466x193opgk0c5zi7g (copy)].[none:Date:qk]</field>
            <field>[federated.1fagxck1jg466x193opgk0c5zi7g (copy)].[none:Region:nk]</field>
            <field>[federated.1fagxck1jg466x193opgk0c5zi7g (copy)].[none:Type:nk]</field>
            <field>[federated.1fagxck1jg466x193opgk0c5zi7g (copy)].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Interactions dashboard'>
      <viewpoints>
        <viewpoint name='Monthly average avocado price'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Share of avocados sold'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='map legend'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='2' />
          <geo-search-visibility value='1' />
          <default-map-tool-selection tool='2' />
          <map-navigation value='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' hidden='true' name='Monthly average avocado price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[none:Pivot Field Names - Split 2:nk]</field>
            <field>[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[none:Region:nk]</field>
            <field>[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[none:Type:nk]</field>
            <field>[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Share of avocados sold'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[none:Pivot Field Names - Split 2:nk]</field>
            <field>[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[none:Region:nk]</field>
            <field>[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[none:Type:nk]</field>
            <field>[federated.1fagxck1jg466x193opgk0c5zi7g (copy 2)].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='map legend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12qn2tv0xouy1a1fltxd41ex8vjk].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12qn2tv0xouy1a1fltxd41ex8vjk].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Interactions dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Metro area' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='los angeles trends' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='stacked area' width='192'>
      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
      /w8z3q2uK771dQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='64' name='years' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
